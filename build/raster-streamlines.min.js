// raster-streamlines Version 0.1.0. Copyright 2020 Roger Veciana i Rovira.
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e(t.rastertools=t.rastertools||{})}(this,function(t){"use strict";function e(t,e){if(t.length<=1||e.length<=1||t[0].length<=1||e[0].length<=1)throw new Error("Raster is too small");if(t.length!==e.length||t[0].length!==e[0].length)throw new Error("Raster components are not the same shape");this.uData=t,this.vData=e,this.xSize=this.uData[0].length,this.ySize=this.uData.length,this.usedPixels=new Array(this.ySize);for(var i=0;i<this.ySize;i++)this.usedPixels[i]=new Array(this.xSize).fill(!1)}function i(t,e,i){return t<=e?e:t>=i?i:t}var s=function(t,i,s,r,n){r=r||1;var a={type:"FeatureCollection",features:[]},h=0,o=new e(t,i);if(s&&6!==s.length)throw new Error("Bad geotransform");const u=Math.round(o.ySize/(60*r))||1;for(var l=o.xSize*o.ySize,f=0;f<l;f++){var p=327685*f%l,y=Math.trunc(p/o.ySize),x=p%o.ySize;if(o.isPixelFree(y,x,u)){var d=o.getLine(y,x,n);d&&(a.features.push({type:"Feature",geometry:{type:"LineString",coordinates:o.applyGeoTransform(d,s)},properties:{num_line:h}}),h++)}}return a};e.prototype.isPixelFree=function(t,e,i){if(t<0||t>=this.xSize||e<0||e>=this.ySize)return!1;const s=Math.max(t-i,0),r=Math.min(t+i,this.xSize-1),n=Math.max(e-i,0),a=Math.min(e+i,this.ySize-1);for(var h=s;h<=r;h++)for(var o=n;o<=a;o++)if(this.usedPixels[o][h])return!1;return!0},e.prototype.getLine=function(t,e,i){if(t<0||e<0||t>=this.xSize||e>=this.ySize||this.usedPixels[e][t])return!1;var s,r,n,a,h,o=!1,u=[[t,e]];for(i=i?1:-1,s=t,r=e;;){if(h=this.getValueAtPoint(s,r),0===h.u&&0===h.v){this.usedPixels[e][t]=!0;break}if(s+=h.u,r+=i*h.v,a=Math.round(r),(n=Math.round(s))<0||a<0||n>=this.xSize||a>=this.ySize||this.usedPixels[a][n])break;u.push([s,r]),o=!0,this.usedPixels[a][n]=!0}for(s=t,r=e;;){if(h=this.getValueAtPoint(s,r),0===h.u&&0===h.v){this.usedPixels[e][t]=!0;break}if(s-=h.u,r-=i*h.v,a=Math.round(r),(n=Math.round(s))<0||a<0||n>=this.xSize||a>=this.ySize||this.usedPixels[a][n])break;u.unshift([s,r]),o=!0,this.usedPixels[a][n]=!0}return!!o&&(this.usedPixels[e][t]=!0,u)},e.prototype.applyGeoTransform=function(t,e){function i(t){return[e[0]+e[1]*t[0]+e[2]*t[1],e[3]+e[4]*t[0]+e[5]*t[1]]}return null==e?t:t.map(i)},e.prototype.getValueAtPoint=function(t,e){const s=i(Math.floor(t),0,this.xSize-2),r=s+1,n=i(Math.floor(e),0,this.ySize-2),a=n+1,h=t-s,o=1-h,u=e-n,l=1-u,f=l*o,p=u*o,y=l*h,x=u*h,d=this.uData[n][s]*f+this.uData[n][r]*p+this.uData[a][s]*y+this.uData[a][r]*x,S=this.vData[n][s]*f+this.vData[n][r]*p+this.vData[a][s]*y+this.vData[a][r]*x,z=Math.max(Math.abs(d),Math.abs(S))||1;return{u:d/z,v:S/z}},t.streamlines=s,Object.defineProperty(t,"__esModule",{value:!0})});